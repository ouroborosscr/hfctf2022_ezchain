import requests
import base64
# x=requests.post('http://127.0.0.1:8090/?token=GeCTF2022',data=base64.b64decode(''))
# print(x.text)

y=requests.get('http://127.0.0.1:8090/?cmd=ls')
print(y.text)